{"id":"js/main.js","dependencies":[{"name":"D:\\작업중\\999.연습\\practice\\parcel-template-basic\\.babelrc.js","includedInParent":true,"mtime":1658204911046},{"name":"D:\\작업중\\999.연습\\practice\\parcel-template-basic\\package.json","includedInParent":true,"mtime":1658218247059},{"name":"@babel/runtime/helpers/asyncToGenerator","parent":"D:\\작업중\\999.연습\\practice\\parcel-template-basic\\js\\main.js","resolved":"D:\\작업중\\999.연습\\practice\\parcel-template-basic\\node_modules\\@babel\\runtime\\helpers\\asyncToGenerator.js"},{"name":"@babel/runtime/regenerator","parent":"D:\\작업중\\999.연습\\practice\\parcel-template-basic\\js\\main.js","resolved":"D:\\작업중\\999.연습\\practice\\parcel-template-basic\\node_modules\\@babel\\runtime\\regenerator\\index.js"}],"generated":{"js":"\"use strict\";\n\nvar _asyncToGenerator2 = _interopRequireDefault(require(\"@babel/runtime/helpers/asyncToGenerator\"));\n\nvar _regenerator = _interopRequireDefault(require(\"@babel/runtime/regenerator\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconsole.log('hello parcel!');\n\nfunction test() {\n  return _test.apply(this, arguments);\n}\n\nfunction _test() {\n  _test = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee() {\n    var promise;\n    return _regenerator.default.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            promise = Promise.resolve(123);\n            _context.t0 = console;\n            _context.next = 4;\n            return promise;\n\n          case 4:\n            _context.t1 = _context.sent;\n\n            _context.t0.log.call(_context.t0, _context.t1);\n\n          case 6:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _test.apply(this, arguments);\n}\n\ntest();"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":9,"column":0},"source":"js/main.js","original":{"line":1,"column":0},"name":"console"},{"generated":{"line":9,"column":7},"source":"js/main.js","original":{"line":1,"column":7}},{"generated":{"line":9,"column":8},"source":"js/main.js","original":{"line":1,"column":8},"name":"log"},{"generated":{"line":9,"column":11},"source":"js/main.js","original":{"line":1,"column":0}},{"generated":{"line":9,"column":12},"source":"js/main.js","original":{"line":1,"column":12}},{"generated":{"line":9,"column":27},"source":"js/main.js","original":{"line":1,"column":0}},{"generated":{"line":11,"column":9},"source":"js/main.js","original":{"line":3,"column":15},"name":"test"},{"generated":{"line":16,"column":82},"source":"js/main.js","original":{"line":3,"column":0}},{"generated":{"line":17,"column":4},"source":"js/main.js","original":{"line":3,"column":0}},{"generated":{"line":18,"column":4},"source":"js/main.js","original":{"line":3,"column":0}},{"generated":{"line":19,"column":6},"source":"js/main.js","original":{"line":3,"column":0}},{"generated":{"line":20,"column":8},"source":"js/main.js","original":{"line":3,"column":0}},{"generated":{"line":21,"column":10},"source":"js/main.js","original":{"line":3,"column":0}},{"generated":{"line":22,"column":12},"source":"js/main.js","original":{"line":4,"column":10},"name":"promise"},{"generated":{"line":22,"column":19},"source":"js/main.js","original":{"line":3,"column":0}},{"generated":{"line":22,"column":22},"source":"js/main.js","original":{"line":4,"column":20},"name":"Promise"},{"generated":{"line":22,"column":29},"source":"js/main.js","original":{"line":4,"column":27}},{"generated":{"line":22,"column":30},"source":"js/main.js","original":{"line":4,"column":28},"name":"resolve"},{"generated":{"line":22,"column":37},"source":"js/main.js","original":{"line":4,"column":20}},{"generated":{"line":22,"column":38},"source":"js/main.js","original":{"line":4,"column":36}},{"generated":{"line":22,"column":41},"source":"js/main.js","original":{"line":4,"column":20}},{"generated":{"line":22,"column":42},"source":"js/main.js","original":{"line":3,"column":0}},{"generated":{"line":23,"column":12},"source":"js/main.js","original":{"line":3,"column":0}},{"generated":{"line":23,"column":26},"source":"js/main.js","original":{"line":5,"column":4},"name":"console"},{"generated":{"line":23,"column":33},"source":"js/main.js","original":{"line":3,"column":0}},{"generated":{"line":24,"column":12},"source":"js/main.js","original":{"line":3,"column":0}},{"generated":{"line":25,"column":12},"source":"js/main.js","original":{"line":3,"column":0}},{"generated":{"line":25,"column":19},"source":"js/main.js","original":{"line":5,"column":22},"name":"promise"},{"generated":{"line":25,"column":26},"source":"js/main.js","original":{"line":3,"column":0}},{"generated":{"line":27,"column":10},"source":"js/main.js","original":{"line":3,"column":0}},{"generated":{"line":28,"column":12},"source":"js/main.js","original":{"line":3,"column":0}},{"generated":{"line":30,"column":12},"source":"js/main.js","original":{"line":3,"column":0}},{"generated":{"line":30,"column":24},"source":"js/main.js","original":{"line":5,"column":12},"name":"log"},{"generated":{"line":30,"column":27},"source":"js/main.js","original":{"line":3,"column":0}},{"generated":{"line":32,"column":10},"source":"js/main.js","original":{"line":3,"column":0}},{"generated":{"line":33,"column":10},"source":"js/main.js","original":{"line":3,"column":0}},{"generated":{"line":34,"column":12},"source":"js/main.js","original":{"line":3,"column":0}},{"generated":{"line":35,"column":8},"source":"js/main.js","original":{"line":3,"column":0}},{"generated":{"line":36,"column":6},"source":"js/main.js","original":{"line":3,"column":0}},{"generated":{"line":37,"column":4},"source":"js/main.js","original":{"line":3,"column":0}},{"generated":{"line":38,"column":2},"source":"js/main.js","original":{"line":3,"column":0}},{"generated":{"line":42,"column":0},"source":"js/main.js","original":{"line":9,"column":0},"name":"test"},{"generated":{"line":42,"column":4},"source":"js/main.js","original":{"line":9,"column":4}}],"sources":{"js/main.js":"console.log('hello parcel!')\r\n\r\nasync function test(){\r\n    const promise = Promise.resolve(123)\r\n    console.log(await promise)\r\n\r\n}\r\n\r\ntest()"},"lineCount":null}},"error":null,"hash":"795554b00ce30e8296ab209648188649","cacheData":{"env":{}}}